FROM node:20-alpine AS base

RUN npm i -g pnpm &&\
    npm i -g dos2unix


FROM base As dependencies

WORKDIR /app
COPY ./package.json ./pnpm-lock.yaml ./
RUN pnpm install


FROM base As build

ARG APP_ENV

WORKDIR /app
COPY . .
COPY --from=dependencies /app/node_modules ./node_modules
RUN ./script/load-config.sh $APP_ENV &&\
    pnpm build



FROM base As deploy

WORKDIR /app
COPY --from=build /app/.env .env
COPY --from=build /app/dist .




# 3. Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production

RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

COPY --from=builder /app/public ./public

# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static


USER nextjs

EXPOSE 3000

ENV PORT 3000

CMD HOSTNAME=localhost node server.js
