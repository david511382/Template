version: '3'
services:
  frontend:
    container_name: frontend
    image: login-manager-frontend
    build:
      context: ./client
      dockerfile: ./deploy/dockerfile
      target: deploy
      args:
        - APP_ENV=${APP_ENV}
    restart: unless-stopped
    volumes:
      - './logs/dev:/var/log/login-manager'
  
  backend:
    container_name: backend
    image: login-manager-backend
    build:
      context: .
      dockerfile: ./deploy/docker/app/dockerfile
      target: deploy
      args:
        - APP_ENV=${APP_ENV}
    restart: unless-stopped
    volumes:
      - './logs/dev:/var/log/login-manager'
  
  # client:
  #   container_name: client
  #   image: login-manager
  #   build:
  #     context: ./client
  #     dockerfile: ./client/dockerfile
  #     target: deploy
  #     args:
  #       - APP_ENV=${APP_ENV}
  #   restart: unless-stopped
  #   ports:
  #     - 3000:${PORT:-3000}
  #   volumes:
  #     - './client/logs/dev:/var/log/login-manager'

  redis:
    extends:
      file: docker-compose.infra.yml
      service: redis
  
  db:
    extends:
      file: docker-compose.infra.yml
      service: db

volumes:
  mysql-vol:
    driver: local